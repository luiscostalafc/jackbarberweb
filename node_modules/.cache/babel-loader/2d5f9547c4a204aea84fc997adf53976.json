{"ast":null,"code":"var _jsxFileName = \"/private/var/www/jackbarberweb/src/pages/SingIn/index.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; //import { Link } from 'react-router-dom';\n\nimport { Form, Input } from '@rocketseat/unform';\nimport * as Yup from 'yup';\nimport { signInRequest } from \"../../store/modules/auth/actions\";\nimport logo from \"../../assets/logo.png\";\nconst schema = Yup.object().shape({\n  email: Yup.string().email('Insira um e-mail válido').required('O e-mail é obrigatório'),\n  password: Yup.string().required('A senha é obrigatória')\n});\nexport default function SingIn() {\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.auth.loading);\n\n  function handleSubmit({\n    email,\n    password\n  }) {\n    dispatch(signInRequest(email, password));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"img\", {\n    src: logo,\n    alt: \"GoBarber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Form, {\n    schema: schema,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Input, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Seu e-mail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Sua senha secreta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, loading ? 'Carregando...' : 'Acessar')));\n}","map":{"version":3,"sources":["/private/var/www/jackbarberweb/src/pages/SingIn/index.js"],"names":["React","useDispatch","useSelector","Form","Input","Yup","signInRequest","logo","schema","object","shape","email","string","required","password","SingIn","dispatch","loading","state","auth","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,oBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,aAAT,QAA8B,kCAA9B;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,MAAMC,MAAM,GAAGH,GAAG,CAACI,MAAJ,GAAaC,KAAb,CAAmB;AACjCC,EAAAA,KAAK,EAAEN,GAAG,CAACO,MAAJ,GACLD,KADK,CACC,yBADD,EAELE,QAFK,CAEI,wBAFJ,CAD0B;AAIjCC,EAAAA,QAAQ,EAAET,GAAG,CAACO,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB;AAJuB,CAAnB,CAAf;AAOA,eAAe,SAASE,MAAT,GAAkB;AAChC,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,OAAO,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,OAArB,CAA3B;;AAEA,WAASG,YAAT,CAAsB;AAAET,IAAAA,KAAF;AAASG,IAAAA;AAAT,GAAtB,EAA2C;AAC1CE,IAAAA,QAAQ,CAACV,aAAa,CAACK,KAAD,EAAQG,QAAR,CAAd,CAAR;AACA;;AAED,SACC,0CACC;AAAK,IAAA,GAAG,EAAEP,IAAV;AAAgB,IAAA,GAAG,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAGC,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEC,MAAd;AAAsB,IAAA,QAAQ,EAAEY,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAiC,IAAA,WAAW,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,KAAD;AACC,IAAA,IAAI,EAAC,UADN;AAEC,IAAA,IAAI,EAAC,UAFN;AAGC,IAAA,WAAW,EAAC,mBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAQC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBH,OAAO,GAAG,eAAH,GAAqB,SAAnD,CARD,CAHD,CADD;AAiBA","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n//import { Link } from 'react-router-dom';\nimport { Form, Input } from '@rocketseat/unform';\nimport * as Yup from 'yup';\n\nimport { signInRequest } from '~/store/modules/auth/actions';\n\nimport logo from '~/assets/logo.png';\n\nconst schema = Yup.object().shape({\n\temail: Yup.string()\n\t\t.email('Insira um e-mail válido')\n\t\t.required('O e-mail é obrigatório'),\n\tpassword: Yup.string().required('A senha é obrigatória'),\n});\n\nexport default function SingIn() {\n\tconst dispatch = useDispatch();\n\tconst loading = useSelector(state => state.auth.loading);\n\n\tfunction handleSubmit({ email, password }) {\n\t\tdispatch(signInRequest(email, password));\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<img src={logo} alt=\"GoBarber\" />\n\n\t\t\t<Form schema={schema} onSubmit={handleSubmit}>\n\t\t\t\t<Input name=\"email\" type=\"email\" placeholder=\"Seu e-mail\" />\n\t\t\t\t<Input\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"Sua senha secreta\"\n\t\t\t\t/>\n\n\t\t\t\t<button type=\"submit\">{loading ? 'Carregando...' : 'Acessar'}</button>\n\t\t\t\t{/* <Link to=\"/register\">Criar conta gratuita</Link> */}\n\t\t\t</Form>\n\t\t</>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}